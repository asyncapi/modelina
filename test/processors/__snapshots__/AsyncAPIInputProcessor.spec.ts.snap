// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AsyncAPIInputProcessor process() should be able to process operation with oneOf 1`] = `
InputMetaModel {
  "models": Object {},
  "originalInput": AsyncAPIDocument {
    "_json": Object {
      "asyncapi": "2.5.0",
      "channels": Object {
        "pet": Object {
          "publish": Object {
            "message": Object {
              "oneOf": Array [
                Object {
                  "payload": Object {
                    "allOf": Array [
                      Object {
                        "properties": Object {
                          "dataschema": Object {
                            "format": "uri",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-6>",
                          },
                          "id": Object {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-2>",
                          },
                          "source": Object {
                            "format": "uri-reference",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-3>",
                          },
                          "specversion": Object {
                            "default": "1.0",
                            "examples": Array [
                              "1.0",
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-4>",
                          },
                          "time": Object {
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-7>",
                          },
                          "type": Object {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-5>",
                          },
                        },
                        "required": Array [
                          "id",
                          "source",
                          "specversion",
                          "type",
                        ],
                        "title": "CloudEvent",
                        "type": "object",
                        "x-parser-schema-id": "CloudEvent",
                      },
                      Object {
                        "properties": Object {
                          "type": Object {
                            "const": "Dog",
                            "title": "DogType",
                            "x-parser-schema-id": "<anonymous-schema-9>",
                          },
                        },
                        "type": "object",
                        "x-parser-schema-id": "<anonymous-schema-8>",
                      },
                    ],
                    "title": "Dog",
                    "x-parser-schema-id": "<anonymous-schema-1>",
                  },
                  "x-parser-message-name": "Dog",
                },
                Object {
                  "payload": Object {
                    "allOf": Array [
                      Object {
                        "properties": Object {
                          "dataschema": Object {
                            "format": "uri",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-6>",
                          },
                          "id": Object {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-2>",
                          },
                          "source": Object {
                            "format": "uri-reference",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-3>",
                          },
                          "specversion": Object {
                            "default": "1.0",
                            "examples": Array [
                              "1.0",
                            ],
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-4>",
                          },
                          "time": Object {
                            "format": "date-time",
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-7>",
                          },
                          "type": Object {
                            "type": "string",
                            "x-parser-schema-id": "<anonymous-schema-5>",
                          },
                        },
                        "required": Array [
                          "id",
                          "source",
                          "specversion",
                          "type",
                        ],
                        "title": "CloudEvent",
                        "type": "object",
                        "x-parser-schema-id": "CloudEvent",
                      },
                      Object {
                        "properties": Object {
                          "type": Object {
                            "const": "Cat",
                            "title": "CatType",
                            "x-parser-schema-id": "<anonymous-schema-12>",
                          },
                        },
                        "type": "object",
                        "x-parser-schema-id": "<anonymous-schema-11>",
                      },
                    ],
                    "title": "Cat",
                    "x-parser-schema-id": "<anonymous-schema-10>",
                  },
                  "x-parser-message-name": "Cat",
                },
              ],
            },
          },
        },
      },
      "components": Object {
        "messages": Object {
          "Cat": Object {
            "payload": Object {
              "allOf": Array [
                Object {
                  "properties": Object {
                    "dataschema": Object {
                      "format": "uri",
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-6>",
                    },
                    "id": Object {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-2>",
                    },
                    "source": Object {
                      "format": "uri-reference",
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-3>",
                    },
                    "specversion": Object {
                      "default": "1.0",
                      "examples": Array [
                        "1.0",
                      ],
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-4>",
                    },
                    "time": Object {
                      "format": "date-time",
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-7>",
                    },
                    "type": Object {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-5>",
                    },
                  },
                  "required": Array [
                    "id",
                    "source",
                    "specversion",
                    "type",
                  ],
                  "title": "CloudEvent",
                  "type": "object",
                  "x-parser-schema-id": "CloudEvent",
                },
                Object {
                  "properties": Object {
                    "type": Object {
                      "const": "Cat",
                      "title": "CatType",
                      "x-parser-schema-id": "<anonymous-schema-12>",
                    },
                  },
                  "type": "object",
                  "x-parser-schema-id": "<anonymous-schema-11>",
                },
              ],
              "title": "Cat",
              "x-parser-schema-id": "<anonymous-schema-10>",
            },
            "x-parser-message-name": "Cat",
          },
          "Dog": Object {
            "payload": Object {
              "allOf": Array [
                Object {
                  "properties": Object {
                    "dataschema": Object {
                      "format": "uri",
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-6>",
                    },
                    "id": Object {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-2>",
                    },
                    "source": Object {
                      "format": "uri-reference",
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-3>",
                    },
                    "specversion": Object {
                      "default": "1.0",
                      "examples": Array [
                        "1.0",
                      ],
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-4>",
                    },
                    "time": Object {
                      "format": "date-time",
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-7>",
                    },
                    "type": Object {
                      "type": "string",
                      "x-parser-schema-id": "<anonymous-schema-5>",
                    },
                  },
                  "required": Array [
                    "id",
                    "source",
                    "specversion",
                    "type",
                  ],
                  "title": "CloudEvent",
                  "type": "object",
                  "x-parser-schema-id": "CloudEvent",
                },
                Object {
                  "properties": Object {
                    "type": Object {
                      "const": "Dog",
                      "title": "DogType",
                      "x-parser-schema-id": "<anonymous-schema-9>",
                    },
                  },
                  "type": "object",
                  "x-parser-schema-id": "<anonymous-schema-8>",
                },
              ],
              "title": "Dog",
              "x-parser-schema-id": "<anonymous-schema-1>",
            },
            "x-parser-message-name": "Dog",
          },
        },
        "schemas": Object {
          "CloudEvent": Object {
            "properties": Object {
              "dataschema": Object {
                "format": "uri",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-6>",
              },
              "id": Object {
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-2>",
              },
              "source": Object {
                "format": "uri-reference",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-3>",
              },
              "specversion": Object {
                "default": "1.0",
                "examples": Array [
                  "1.0",
                ],
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-4>",
              },
              "time": Object {
                "format": "date-time",
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-7>",
              },
              "type": Object {
                "type": "string",
                "x-parser-schema-id": "<anonymous-schema-5>",
              },
            },
            "required": Array [
              "id",
              "source",
              "specversion",
              "type",
            ],
            "title": "CloudEvent",
            "type": "object",
            "x-parser-schema-id": "CloudEvent",
          },
        },
      },
      "defaultContentType": "application/json",
      "info": Object {
        "title": "CloudEvent example",
        "version": "1.0.0",
      },
      "x-parser-api-version": 1,
      "x-parser-spec-parsed": true,
    },
    "_meta": Object {
      "asyncapi": Object {
        "input": "{
  \\"asyncapi\\": \\"2.5.0\\",
  \\"defaultContentType\\": \\"application/json\\",
  \\"info\\": {
    \\"title\\": \\"CloudEvent example\\",
    \\"version\\": \\"1.0.0\\"
  },
  \\"channels\\": {
    \\"pet\\": {
      \\"publish\\": {
        \\"message\\": {
          \\"oneOf\\": [
            {
              \\"$ref\\": \\"#/components/messages/Dog\\"
            },
            {
              \\"$ref\\": \\"#/components/messages/Cat\\"
            }
          ]
        }
      }
    }
  },
  \\"components\\": {
    \\"messages\\": {
      \\"Dog\\": {
        \\"payload\\": {
          \\"title\\": \\"Dog\\",
          \\"allOf\\": [
            {
              \\"$ref\\": \\"#/components/schemas/CloudEvent\\"
            },
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"type\\": {
                  \\"title\\": \\"DogType\\",
                  \\"const\\": \\"Dog\\"
                }
              }
            }
          ]
        }
      },
      \\"Cat\\": {
        \\"payload\\": {
          \\"title\\": \\"Cat\\",
          \\"allOf\\": [
            {
              \\"$ref\\": \\"#/components/schemas/CloudEvent\\"
            },
            {
              \\"type\\": \\"object\\",
              \\"properties\\": {
                \\"type\\": {
                  \\"title\\": \\"CatType\\",
                  \\"const\\": \\"Cat\\"
                }
              }
            }
          ]
        }
      }
    },
    \\"schemas\\": {
      \\"CloudEvent\\": {
        \\"title\\": \\"CloudEvent\\",
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"id\\": {
            \\"type\\": \\"string\\"
          },
          \\"source\\": {
            \\"type\\": \\"string\\",
            \\"format\\": \\"uri-reference\\"
          },
          \\"specversion\\": {
            \\"type\\": \\"string\\",
            \\"default\\": \\"1.0\\",
            \\"examples\\": [\\"1.0\\"]
          },
          \\"type\\": {
            \\"type\\": \\"string\\"
          },
          \\"dataschema\\": {
            \\"type\\": \\"string\\",
            \\"format\\": \\"uri\\"
          },
          \\"time\\": {
            \\"type\\": \\"string\\",
            \\"format\\": \\"date-time\\"
          }
        },
        \\"required\\": [\\"id\\", \\"source\\", \\"specversion\\", \\"type\\"]
      }
    }
  }
}
",
        "parsed": Object {
          "asyncapi": "2.5.0",
          "channels": Object {
            "pet": Object {
              "publish": Object {
                "message": Object {
                  "oneOf": Array [
                    Object {
                      "payload": Object {
                        "allOf": Array [
                          Object {
                            "properties": Object {
                              "dataschema": Object {
                                "format": "uri",
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-6>",
                              },
                              "id": Object {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-2>",
                              },
                              "source": Object {
                                "format": "uri-reference",
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-3>",
                              },
                              "specversion": Object {
                                "default": "1.0",
                                "examples": Array [
                                  "1.0",
                                ],
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-4>",
                              },
                              "time": Object {
                                "format": "date-time",
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-7>",
                              },
                              "type": Object {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-5>",
                              },
                            },
                            "required": Array [
                              "id",
                              "source",
                              "specversion",
                              "type",
                            ],
                            "title": "CloudEvent",
                            "type": "object",
                            "x-parser-schema-id": "CloudEvent",
                          },
                          Object {
                            "properties": Object {
                              "type": Object {
                                "const": "Dog",
                                "title": "DogType",
                                "x-parser-schema-id": "<anonymous-schema-9>",
                              },
                            },
                            "type": "object",
                            "x-parser-schema-id": "<anonymous-schema-8>",
                          },
                        ],
                        "title": "Dog",
                        "x-parser-schema-id": "<anonymous-schema-1>",
                      },
                      "x-parser-message-name": "Dog",
                    },
                    Object {
                      "payload": Object {
                        "allOf": Array [
                          Object {
                            "properties": Object {
                              "dataschema": Object {
                                "format": "uri",
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-6>",
                              },
                              "id": Object {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-2>",
                              },
                              "source": Object {
                                "format": "uri-reference",
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-3>",
                              },
                              "specversion": Object {
                                "default": "1.0",
                                "examples": Array [
                                  "1.0",
                                ],
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-4>",
                              },
                              "time": Object {
                                "format": "date-time",
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-7>",
                              },
                              "type": Object {
                                "type": "string",
                                "x-parser-schema-id": "<anonymous-schema-5>",
                              },
                            },
                            "required": Array [
                              "id",
                              "source",
                              "specversion",
                              "type",
                            ],
                            "title": "CloudEvent",
                            "type": "object",
                            "x-parser-schema-id": "CloudEvent",
                          },
                          Object {
                            "properties": Object {
                              "type": Object {
                                "const": "Cat",
                                "title": "CatType",
                                "x-parser-schema-id": "<anonymous-schema-12>",
                              },
                            },
                            "type": "object",
                            "x-parser-schema-id": "<anonymous-schema-11>",
                          },
                        ],
                        "title": "Cat",
                        "x-parser-schema-id": "<anonymous-schema-10>",
                      },
                      "x-parser-message-name": "Cat",
                    },
                  ],
                },
              },
            },
          },
          "components": Object {
            "messages": Object {
              "Cat": Object {
                "payload": Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "dataschema": Object {
                          "format": "uri",
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-6>",
                        },
                        "id": Object {
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-2>",
                        },
                        "source": Object {
                          "format": "uri-reference",
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-3>",
                        },
                        "specversion": Object {
                          "default": "1.0",
                          "examples": Array [
                            "1.0",
                          ],
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-4>",
                        },
                        "time": Object {
                          "format": "date-time",
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-7>",
                        },
                        "type": Object {
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-5>",
                        },
                      },
                      "required": Array [
                        "id",
                        "source",
                        "specversion",
                        "type",
                      ],
                      "title": "CloudEvent",
                      "type": "object",
                      "x-parser-schema-id": "CloudEvent",
                    },
                    Object {
                      "properties": Object {
                        "type": Object {
                          "const": "Cat",
                          "title": "CatType",
                          "x-parser-schema-id": "<anonymous-schema-12>",
                        },
                      },
                      "type": "object",
                      "x-parser-schema-id": "<anonymous-schema-11>",
                    },
                  ],
                  "title": "Cat",
                  "x-parser-schema-id": "<anonymous-schema-10>",
                },
                "x-parser-message-name": "Cat",
              },
              "Dog": Object {
                "payload": Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "dataschema": Object {
                          "format": "uri",
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-6>",
                        },
                        "id": Object {
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-2>",
                        },
                        "source": Object {
                          "format": "uri-reference",
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-3>",
                        },
                        "specversion": Object {
                          "default": "1.0",
                          "examples": Array [
                            "1.0",
                          ],
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-4>",
                        },
                        "time": Object {
                          "format": "date-time",
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-7>",
                        },
                        "type": Object {
                          "type": "string",
                          "x-parser-schema-id": "<anonymous-schema-5>",
                        },
                      },
                      "required": Array [
                        "id",
                        "source",
                        "specversion",
                        "type",
                      ],
                      "title": "CloudEvent",
                      "type": "object",
                      "x-parser-schema-id": "CloudEvent",
                    },
                    Object {
                      "properties": Object {
                        "type": Object {
                          "const": "Dog",
                          "title": "DogType",
                          "x-parser-schema-id": "<anonymous-schema-9>",
                        },
                      },
                      "type": "object",
                      "x-parser-schema-id": "<anonymous-schema-8>",
                    },
                  ],
                  "title": "Dog",
                  "x-parser-schema-id": "<anonymous-schema-1>",
                },
                "x-parser-message-name": "Dog",
              },
            },
            "schemas": Object {
              "CloudEvent": Object {
                "properties": Object {
                  "dataschema": Object {
                    "format": "uri",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-6>",
                  },
                  "id": Object {
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-2>",
                  },
                  "source": Object {
                    "format": "uri-reference",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-3>",
                  },
                  "specversion": Object {
                    "default": "1.0",
                    "examples": Array [
                      "1.0",
                    ],
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-4>",
                  },
                  "time": Object {
                    "format": "date-time",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-7>",
                  },
                  "type": Object {
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-5>",
                  },
                },
                "required": Array [
                  "id",
                  "source",
                  "specversion",
                  "type",
                ],
                "title": "CloudEvent",
                "type": "object",
                "x-parser-schema-id": "CloudEvent",
              },
            },
          },
          "defaultContentType": "application/json",
          "info": Object {
            "title": "CloudEvent example",
            "version": "1.0.0",
          },
          "x-parser-api-version": 1,
          "x-parser-spec-parsed": true,
        },
        "semver": Object {
          "major": 2,
          "minor": 5,
          "patch": 0,
          "rc": undefined,
          "version": "2.5.0",
        },
        "source": undefined,
      },
      "pointer": "/",
    },
  },
}
`;

exports[`AsyncAPIInputProcessor process() should be able to process parsed objects 1`] = `
InputMetaModel {
  "models": Object {},
  "originalInput": AsyncAPIDocument {
    "_json": Object {
      "asyncapi": "2.0.0",
      "channels": Object {
        "/user/signedup": Object {
          "subscribe": Object {
            "message": Object {
              "payload": Object {
                "properties": Object {
                  "email": Object {
                    "format": "email",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-2>",
                  },
                },
                "type": "object",
                "x-parser-schema-id": "<anonymous-schema-1>",
              },
              "x-parser-message-name": "<anonymous-message-1>",
            },
          },
        },
      },
      "defaultContentType": "application/json",
      "info": Object {
        "title": "Signup service example (internal)",
        "version": "0.1.0",
      },
      "x-parser-api-version": 1,
      "x-parser-spec-parsed": true,
    },
    "_meta": Object {
      "asyncapi": Object {
        "input": "{
  \\"asyncapi\\": \\"2.0.0\\",
  \\"defaultContentType\\": \\"application/json\\",
  \\"info\\": {
    \\"title\\": \\"Signup service example (internal)\\",
    \\"version\\": \\"0.1.0\\"
  },
  \\"channels\\": {
    \\"/user/signedup\\": {
      \\"subscribe\\": {
        \\"message\\": {
          \\"payload\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
              \\"email\\": {
                \\"type\\": \\"string\\",
                \\"format\\": \\"email\\"
              }
            }
          }
        }
      }
    }
  }
}",
        "parsed": Object {
          "asyncapi": "2.0.0",
          "channels": Object {
            "/user/signedup": Object {
              "subscribe": Object {
                "message": Object {
                  "payload": Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-2>",
                      },
                    },
                    "type": "object",
                    "x-parser-schema-id": "<anonymous-schema-1>",
                  },
                  "x-parser-message-name": "<anonymous-message-1>",
                },
              },
            },
          },
          "defaultContentType": "application/json",
          "info": Object {
            "title": "Signup service example (internal)",
            "version": "0.1.0",
          },
          "x-parser-api-version": 1,
          "x-parser-spec-parsed": true,
        },
        "semver": Object {
          "major": 2,
          "minor": 0,
          "patch": 0,
          "rc": undefined,
          "version": "2.0.0",
        },
        "source": undefined,
      },
      "pointer": "/",
    },
  },
}
`;

exports[`AsyncAPIInputProcessor process() should be able to process pure object 1`] = `
InputMetaModel {
  "models": Object {},
  "originalInput": AsyncAPIDocument {
    "_json": Object {
      "asyncapi": "2.0.0",
      "channels": Object {
        "/user/signedup": Object {
          "subscribe": Object {
            "message": Object {
              "payload": Object {
                "properties": Object {
                  "email": Object {
                    "format": "email",
                    "type": "string",
                    "x-parser-schema-id": "<anonymous-schema-2>",
                  },
                },
                "type": "object",
                "x-parser-schema-id": "<anonymous-schema-1>",
              },
              "x-parser-message-name": "<anonymous-message-1>",
            },
          },
        },
      },
      "defaultContentType": "application/json",
      "info": Object {
        "title": "Signup service example (internal)",
        "version": "0.1.0",
      },
      "x-parser-api-version": 1,
      "x-parser-spec-parsed": true,
    },
    "_meta": Object {
      "asyncapi": Object {
        "input": Object {
          "asyncapi": "2.0.0",
          "channels": Object {
            "/user/signedup": Object {
              "subscribe": Object {
                "message": Object {
                  "payload": Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
            },
          },
          "defaultContentType": "application/json",
          "info": Object {
            "title": "Signup service example (internal)",
            "version": "0.1.0",
          },
        },
        "parsed": Object {
          "asyncapi": "2.0.0",
          "channels": Object {
            "/user/signedup": Object {
              "subscribe": Object {
                "message": Object {
                  "payload": Object {
                    "properties": Object {
                      "email": Object {
                        "format": "email",
                        "type": "string",
                        "x-parser-schema-id": "<anonymous-schema-2>",
                      },
                    },
                    "type": "object",
                    "x-parser-schema-id": "<anonymous-schema-1>",
                  },
                  "x-parser-message-name": "<anonymous-message-1>",
                },
              },
            },
          },
          "defaultContentType": "application/json",
          "info": Object {
            "title": "Signup service example (internal)",
            "version": "0.1.0",
          },
          "x-parser-api-version": 1,
          "x-parser-spec-parsed": true,
        },
        "semver": Object {
          "major": 2,
          "minor": 0,
          "patch": 0,
          "rc": undefined,
          "version": "2.0.0",
        },
        "source": undefined,
      },
      "pointer": "/",
    },
  },
}
`;
