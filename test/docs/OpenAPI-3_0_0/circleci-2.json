{
	"openapi": "3.0.0",
	"info": {
		"title": "CircleCI API",
		"description": "This describes the resources that make up the CircleCI API v2.",
		"termsOfService": "http:\/\/exmple.com\/license\/",
		"version": "v2",
		"contact": {
			"name": "No Contact",
			"url": "http:\/\/example.com",
			"email": "email@example.com"
		},
		"license": {
			"name": "No License",
			"url": "http:\/\/example.com"
		}
	},
	"servers": [{
		"url": "http:\/\/circleci.com\/api\/v1"
	},
	{
		"url": "https:\/\/circleci.com\/api\/v2"
	}],
	"paths": {
		"\/context": {
			"get": {
				"summary": "List contexts",
				"description": "List all contexts for an owner.",
				"operationId": "listContexts",
				"parameters": [{
					"name": "owner-id",
					"in": "query",
					"description": "The unique ID of the owner of the context. Specify either this or owner-slug.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "owner-slug",
					"in": "query",
					"description": "A string that represents an organization. Specify either this or owner-id. Cannot be used for accounts.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "owner-type",
					"in": "query",
					"description": "The type of the owner. Defaults to \"organization\". Accounts are only used as context owners in server.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/context\/{context-id}": {
			"delete": {
				"summary": "Delete a context",
				"description": "",
				"operationId": "deleteContext",
				"parameters": [{
					"name": "context-id",
					"in": "path",
					"description": "ID of the context (UUID)",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/context\/{context-id}\/environment-variable": {
			"get": {
				"summary": "List environment variables",
				"description": "List information about environment variables in a context, not including their values.",
				"operationId": "listEnvironmentVariablesFromContext",
				"parameters": [{
					"name": "context-id",
					"in": "path",
					"description": "ID of the context (UUID)",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/context\/{context-id}\/environment-variable\/{env-var-name}": {
			"put": {
				"summary": "Add or update an environment variable",
				"description": "Create or update an environment variable within a context. Returns information about the environment variable, not including its value.",
				"operationId": "addEnvironmentVariableToContext",
				"parameters": [{
					"name": "context-id",
					"in": "path",
					"description": "ID of the context (UUID)",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "env-var-name",
					"in": "path",
					"description": "The name of the environment variable",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/insights\/{project-slug}\/workflows": {
			"get": {
				"summary": "Get summary metrics for a project's workflows",
				"description": "Get summary metrics for a project's workflows. Workflow runs going back at most 90 days are included in the aggregation window. Metrics are refreshed daily, and thus may not include executions from the last 24 hours. Please note that Insights is not a real time financial reporting tool and should not be used for credit reporting. The most up to date credit information can be found in Plan Overview in the CircleCI UI.",
				"operationId": "getProjectWorkflowMetrics",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "branch",
					"in": "query",
					"description": "The name of a vcs branch. If not passed we will scope the API call to the default branch.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "reporting-window",
					"in": "query",
					"description": "The time window used to calculate summary metrics.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/insights\/{project-slug}\/workflows\/{workflow-name}": {
			"get": {
				"summary": "Get recent runs of a workflow",
				"description": "Get recent runs of a workflow. Runs going back at most 90 days are returned. Please note that Insights is not a real time financial reporting tool and should not be used for credit reporting. The most up to date credit information can be found in Plan Overview in the CircleCI UI.",
				"operationId": "getProjectWorkflowRuns",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "workflow-name",
					"in": "path",
					"description": "The name of the workflow.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "branch",
					"in": "query",
					"description": "The name of a vcs branch. If not passed we will scope the API call to the default branch.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "start-date",
					"in": "query",
					"description": "Include only executions that started at or after this date. This must be specified if an end-date is provided.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "end-date",
					"in": "query",
					"description": "Include only executions that started before this date. This date can be at most 90 days after the start-date.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/insights\/{project-slug}\/workflows\/{workflow-name}\/jobs": {
			"get": {
				"summary": "Get summary metrics for a project workflow's jobs.",
				"description": "Get summary metrics for a project workflow's jobs. Job runs going back at most 90 days are included in the aggregation window. Metrics are refreshed daily, and thus may not include executions from the last 24 hours. Please note that Insights is not a real time financial reporting tool and should not be used for credit reporting. The most up to date credit information can be found in Plan Overview in the CircleCI UI.",
				"operationId": "getProjectWorkflowJobMetrics",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "workflow-name",
					"in": "path",
					"description": "The name of the workflow.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "branch",
					"in": "query",
					"description": "The name of a vcs branch. If not passed we will scope the API call to the default branch.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "reporting-window",
					"in": "query",
					"description": "The time window used to calculate summary metrics.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/insights\/{project-slug}\/workflows\/{workflow-name}\/jobs\/{job-name}": {
			"get": {
				"summary": "Get recent runs of a workflow job",
				"description": "Get recent runs of a job within a workflow. Runs going back at most 90 days are returned. Please note that Insights is not a real time financial reporting tool and should not be used for credit reporting. The most up to date credit information can be found in Plan Overview in the CircleCI UI.",
				"operationId": "getProjectJobRuns",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "workflow-name",
					"in": "path",
					"description": "The name of the workflow.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "job-name",
					"in": "path",
					"description": "The name of the job.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "branch",
					"in": "query",
					"description": "The name of a vcs branch. If not passed we will scope the API call to the default branch.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "start-date",
					"in": "query",
					"description": "Include only executions that started at or after this date. This must be specified if an end-date is provided.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "end-date",
					"in": "query",
					"description": "Include only executions that started before this date. This date can be at most 90 days after the start-date.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/me": {
			"get": {
				"summary": "User Information",
				"description": "Provides information about the user that is currently signed in.",
				"operationId": "getCurrentUser",
				"parameters": []
			}
		},
		"\/me\/collaborations": {
			"get": {
				"summary": "Collaborations",
				"description": "Provides the set of organizations of which a user is a member or a collaborator.\n\nThe set of organizations that a user can collaborate on is composed of:\n\n* Organizations that the current user belongs to across VCS types (e.g. BitBucket, GitHub)\n* The parent organization of repository that the user can collaborate on, but is not necessarily a member of\n* The organization of the current user's account",
				"operationId": "getCollaborations",
				"parameters": []
			}
		},
		"\/pipeline": {
			"get": {
				"summary": "Get a list of pipelines",
				"description": "Returns all pipelines for the most recently built projects (max 250) you follow in an organization.",
				"operationId": "listPipelines",
				"parameters": [{
					"name": "org-slug",
					"in": "query",
					"description": "Org slug in the form `vcs-slug\/org-name`",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "mine",
					"in": "query",
					"description": "Only include entries created by your user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/pipeline\/{pipeline-id}": {
			"get": {
				"summary": "Get a pipeline",
				"description": "Returns a pipeline by ID.",
				"operationId": "getPipelineById",
				"parameters": [{
					"name": "pipeline-id",
					"in": "path",
					"description": "The unique ID of the pipeline.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/pipeline\/{pipeline-id}\/config": {
			"get": {
				"summary": "Get a pipeline's configuration",
				"description": "Returns a pipeline's configuration by ID.",
				"operationId": "getPipelineConfigById",
				"parameters": [{
					"name": "pipeline-id",
					"in": "path",
					"description": "The unique ID of the pipeline.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/pipeline\/{pipeline-id}\/workflow": {
			"get": {
				"summary": "Get a pipeline's workflows",
				"description": "Returns a paginated list of workflows by pipeline ID.",
				"operationId": "listWorkflowsByPipelineId",
				"parameters": [{
					"name": "pipeline-id",
					"in": "path",
					"description": "The unique ID of the pipeline.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}": {
			"get": {
				"summary": "Get a project",
				"description": "Retrieves a project by project slug.",
				"operationId": "getProjectBySlug",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/checkout-key": {
			"get": {
				"summary": "Get all checkout keys",
				"description": "Returns a sequence of checkout keys for `:project`.",
				"operationId": "listCheckoutKeys",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/checkout-key\/{fingerprint}": {
			"delete": {
				"summary": "Delete a checkout key",
				"description": "Deletes the checkout key.",
				"operationId": "deleteCheckoutKey",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "fingerprint",
					"in": "path",
					"description": "An SSH key fingerprint.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/envvar": {
			"get": {
				"summary": "List all environment variables",
				"description": "Returns four 'x' characters, in addition to the last four ASCII characters of the value, consistent with the display of environment variable values on the CircleCI website.",
				"operationId": "listEnvVars",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/envvar\/{name}": {
			"delete": {
				"summary": "Delete an environment variable",
				"description": "Deletes the environment variable named :name.",
				"operationId": "deleteEnvVar",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "name",
					"in": "path",
					"description": "The name of the environment variable.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/job\/{job-number}": {
			"get": {
				"summary": "Get job details",
				"description": "Returns job details.",
				"operationId": "getJobDetails",
				"parameters": [{
					"name": "job-number",
					"in": "path",
					"description": "The number of the job.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/job\/{job-number}\/cancel": {
			"post": {
				"summary": "Cancel job",
				"description": "Cancel job with a given job number.",
				"operationId": "cancelJob",
				"parameters": [{
					"name": "job-number",
					"in": "path",
					"description": "The number of the job.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/pipeline": {
			"post": {
				"summary": "Trigger a new pipeline",
				"description": "Triggers a new pipeline on the project.",
				"operationId": "triggerPipeline",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/pipeline\/mine": {
			"get": {
				"summary": "Get your pipelines",
				"description": "Returns a sequence of all pipelines for this project triggered by the user.",
				"operationId": "listMyPipelines",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "page-token",
					"in": "query",
					"description": "A token to retrieve the next page of results.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/pipeline\/{pipeline-number}": {
			"get": {
				"summary": "Get a pipeline",
				"description": "Returns a pipeline by number.",
				"operationId": "getPipelineByNumber",
				"parameters": [{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "pipeline-number",
					"in": "path",
					"description": "The number of the pipeline.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/{job-number}\/artifacts": {
			"get": {
				"summary": "Get a job's artifacts",
				"description": "Returns a job's artifacts.",
				"operationId": "getJobArtifacts",
				"parameters": [{
					"name": "job-number",
					"in": "path",
					"description": "The number of the job.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/project\/{project-slug}\/{job-number}\/tests": {
			"get": {
				"summary": "Get test metadata",
				"description": "Get test metadata for a build.",
				"operationId": "getTests",
				"parameters": [{
					"name": "job-number",
					"in": "path",
					"description": "The number of the job.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "project-slug",
					"in": "path",
					"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/user\/{id}": {
			"get": {
				"summary": "User Information",
				"description": "Provides information about the user with the given ID.",
				"operationId": "getUser",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The unique ID of the user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/workflow\/{id}": {
			"get": {
				"summary": "Get a workflow",
				"description": "Returns summary fields of a workflow by ID.",
				"operationId": "getWorkflowById",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The unique ID of the user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/workflow\/{id}\/approve\/{approval_request_id}": {
			"post": {
				"summary": "Approve a job",
				"description": "Approves a pending approval job in a workflow.",
				"operationId": "approvePendingApprovalJobById",
				"parameters": [{
					"name": "approval_request_id",
					"in": "path",
					"description": "The ID of the job being approved.",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "id",
					"in": "path",
					"description": "The unique ID of the user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/workflow\/{id}\/cancel": {
			"post": {
				"summary": "Cancel a workflow",
				"description": "Cancels a running workflow.",
				"operationId": "cancelWorkflow",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The unique ID of the user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/workflow\/{id}\/job": {
			"get": {
				"summary": "Get a workflow's jobs",
				"description": "Returns a sequence of jobs for a workflow.",
				"operationId": "listWorkflowJobs",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The unique ID of the user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		},
		"\/workflow\/{id}\/rerun": {
			"post": {
				"summary": "Rerun a workflow",
				"description": "Reruns a workflow.",
				"operationId": "rerunWorkflow",
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "The unique ID of the user.",
					"schema": {
						"type": "string"
					}
				}]
			}
		}
	},
	"components": {
		"schemas": {
			"owner-id": {
				"type": "string",
				"description": "The unique ID of the owner of the context. Specify either this or owner-slug."
			},
			"owner-slug": {
				"type": "string",
				"description": "A string that represents an organization. Specify either this or owner-id. Cannot be used for accounts."
			},
			"owner-type": {
				"type": "string",
				"description": "The type of the owner. Defaults to \"organization\". Accounts are only used as context owners in server."
			},
			"page-token": {
				"type": "string",
				"description": "A token to retrieve the next page of results."
			},
			"context-id": {
				"type": "string",
				"description": "ID of the context (UUID)"
			},
			"env-var-name": {
				"type": "string",
				"description": "The name of the environment variable"
			},
			"project-slug": {
				"type": "string",
				"description": "Project slug in the form `vcs-slug\/org-name\/repo-name`. The `\/` characters may be URL-escaped."
			},
			"branch": {
				"type": "string",
				"description": "The name of a vcs branch. If not passed we will scope the API call to the default branch."
			},
			"reporting-window": {
				"type": "string",
				"description": "The time window used to calculate summary metrics."
			},
			"workflow-name": {
				"type": "string",
				"description": "The name of the workflow."
			},
			"start-date": {
				"type": "string",
				"description": "Include only executions that started at or after this date. This must be specified if an end-date is provided."
			},
			"end-date": {
				"type": "string",
				"description": "Include only executions that started before this date. This date can be at most 90 days after the start-date."
			},
			"job-name": {
				"type": "string",
				"description": "The name of the job."
			},
			"org-slug": {
				"type": "string",
				"description": "Org slug in the form `vcs-slug\/org-name`"
			},
			"mine": {
				"type": "string",
				"description": "Only include entries created by your user."
			},
			"pipeline-id": {
				"type": "string",
				"description": "The unique ID of the pipeline."
			},
			"fingerprint": {
				"type": "string",
				"description": "An SSH key fingerprint."
			},
			"name": {
				"type": "string",
				"description": "The name of the environment variable."
			},
			"job-number": {
				"type": "string",
				"description": "The number of the job."
			},
			"pipeline-number": {
				"type": "string",
				"description": "The number of the pipeline."
			},
			"id": {
				"type": "string",
				"description": "The unique ID of the user."
			},
			"approval_request_id": {
				"type": "string",
				"description": "The ID of the job being approved."
			}
		}
	}
}