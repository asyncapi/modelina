// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Newtonsoft JSON serializer preset should render enum with custom mapping of values 1`] = `
"public class Test
{
  private string stringProp;
  private double numberProp;
  private EnumTest enumProp;
  private NestedTest objectProp;
  private Dictionary<string, dynamic> additionalProperties;

  public string StringProp 
  {
    get { return stringProp; }
    set { stringProp = value; }
  }

  public double NumberProp 
  {
    get { return numberProp; }
    set { numberProp = value; }
  }

  public EnumTest EnumProp 
  {
    get { return enumProp; }
    set { enumProp = value; }
  }

  public NestedTest ObjectProp 
  {
    get { return objectProp; }
    set { objectProp = value; }
  }

  public Dictionary<string, dynamic> AdditionalProperties 
  {
    get { return additionalProperties; }
    set { additionalProperties = value; }
  }
}"
`;

exports[`Newtonsoft JSON serializer preset should render enum with custom mapping of values 2`] = `
"  [JsonConverter(typeof(StringEnumConverter))]
  public enum EnumTest
  {
    [EnumMember(Value=\\"Some enum String\\")]
    SOME_SPACE_ENUM_SPACE_STRING,
    [EnumMember(Value=\\"true\\")]
    RESERVED_TRUE,
    [EnumMember(Value=\\"{\\\\\\"test\\\\\\":\\\\\\"test\\\\\\"}\\")]
    CURLYLEFT_QUOTATION_TEST_QUOTATION_COLON_QUOTATION_TEST_QUOTATION_CURLYRIGHT,
    [EnumMember(Value=\\"2\\")]
    NUMBER_2
  }"
`;

exports[`Newtonsoft JSON serializer preset should render enum with custom mapping of values 3`] = `
"public class NestedTest
{
  private string stringProp;
  private Dictionary<string, dynamic> additionalProperties;

  public string StringProp 
  {
    get { return stringProp; }
    set { stringProp = value; }
  }

  public Dictionary<string, dynamic> AdditionalProperties 
  {
    get { return additionalProperties; }
    set { additionalProperties = value; }
  }
}"
`;
