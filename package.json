{
  "name": "@asyncapi/modelina",
  "version": "1.0.0-next.8",
  "description": "Library for generating data models based on inputs such as AsyncAPI, OpenAPI, or JSON Schema documents",
  "license": "Apache-2.0",
  "homepage": "https://github.com/asyncapi/modelina",
  "bugs": {
    "url": "https://github.com/asyncapi/modelina/issues"
  },
  "engines": {
    "node": ">=14"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/asyncapi/modelina.git"
  },
  "keywords": [
    "asyncapi",
    "documentation",
    "generator",
    "model",
    "sdk"
  ],
  "author": {
    "name": "The Modelina codeowners and contributors"
  },
  "main": "lib/cjs/index.js",
  "module": "lib/esm/index.js",
  "types": "lib/types/index.d.ts",
  "sideEffects": false,
  "files": [
    "/lib",
    "./README.md",
    "./LICENSE"
  ],
  "dependencies": {
    "@apidevtools/json-schema-ref-parser": "^9.0.9",
    "@apidevtools/swagger-parser": "^10.0.3",
    "@asyncapi/parser": "^1.15.1",
    "alterschema": "^1.1.1",
    "change-case": "^4.1.2",
    "openapi-types": "9.3.0",
    "typescript-json-schema": "^0.53.0"
  },
  "devDependencies": {
    "@semantic-release/commit-analyzer": "^9.0.1",
    "@semantic-release/github": "^8.0.1",
    "@semantic-release/npm": "^8.0.0",
    "@semantic-release/release-notes-generator": "^10.0.2",
    "@types/jest": "^27.0.2",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "ajv": "^8.6.3",
    "conventional-changelog-conventionalcommits": "^4.6.1",
    "cross-env": "^7.0.3",
    "eslint": "^7.32.0",
    "eslint-plugin-github": "^4.3.2",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-sonarjs": "^0.10.0",
    "jest": "^27.2.5",
    "jsdoc-to-markdown": "^7.1.0",
    "markdown-toc": "^1.2.0",
    "puppeteer": "^16.0.0",
    "semantic-release": "^19.0.3",
    "ts-jest": "^27.0.5",
    "ts-node": "^10.3.0",
    "typescript": "^4.4.4"
  },
  "scripts": {
    "build": "tsc",
    "build:prod": "npm run build:cjs && npm run build:esm && npm run build:types",
    "build:cjs": "tsc",
    "build:esm": "tsc --project tsconfig.json --module ESNext --outDir ./lib/esm",
    "build:types": "tsc --project tsconfig.json --declaration --emitDeclarationOnly --declarationMap --outDir ./lib/types",
    "docker:build": "docker build -t asyncapi/modelina .",
    "docker:test": "npm run docker:build && docker run asyncapi/modelina npm run test",
    "docker:test:blackbox": "npm run docker:build && docker run asyncapi/modelina npm run test:blackbox",
    "test": "npm run test:library && npm run test:examples",
    "test:library": "cross-env CI=true jest --coverage --testPathIgnorePatterns ./test/blackbox --testPathIgnorePatterns ./examples",
    "test:examples": "cross-env CI=true jest  ./examples --testPathIgnorePatterns ./examples/integrate-with-react --testPathIgnorePatterns ./examples/TEMPLATE && npm run test:examples:websites",
    "test:examples:websites": "cd ./examples/integrate-with-react && npm i && npm run test",
    "test:blackbox": "cross-env CI=true jest ./test/blackbox",
    "test:watch": "jest --watch",
    "docs": "npm run docs:markdown",
    "docs:markdown": "jsdoc2md lib/cjs/index.js -f lib/cjs/**/*.js > API.md",
    "lint": "eslint --max-warnings 0 --config .eslintrc .",
    "lint:fix": "eslint --max-warnings 0 --config .eslintrc . --fix",
    "release": "semantic-release",
    "generate:readme:toc": "markdown-toc -i README.md && markdown-toc -i ./docs/languages/Python.md && markdown-toc -i ./docs/usage.md && markdown-toc -i ./docs/integration.md && markdown-toc -i ./docs/advanced.md && markdown-toc -i ./docs/languages/Dart.md && markdown-toc -i ./docs/languages/TypeScript.md && markdown-toc -i ./docs/languages/Java.md && markdown-toc -i ./docs/languages/JavaScript.md && markdown-toc -i ./docs/languages/Csharp.md && markdown-toc -i ./docs/README.md && markdown-toc -i ./docs/generators.md",
    "generate:assets": "npm run build:prod && npm run docs && npm run generate:readme:toc",
    "bump:version": "npm --no-git-tag-version --allow-same-version version $VERSION",
    "prepublishOnly": "npm run build:prod && npm run generate:readme:toc"
  },
  "publishConfig": {
    "access": "public"
  },
  "release": {
    "branches": [
      "master",
      {
        "name": "next",
        "prerelease": true
      }
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits"
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits"
        }
      ],
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  }
}
