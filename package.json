{
  "name": "@asyncapi/modelina",
  "version": "1.8.6",
  "description": "Library for generating data models based on inputs such as AsyncAPI, OpenAPI, or JSON Schema documents",
  "license": "Apache-2.0",
  "homepage": "https://www.modelina.org",
  "bugs": {
    "url": "https://github.com/asyncapi/modelina/issues"
  },
  "engines": {
    "node": ">=14"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/asyncapi/modelina.git"
  },
  "keywords": [
    "asyncapi",
    "modelina",
    "model-generation",
    "generator",
    "model",
    "sdk"
  ],
  "author": {
    "name": "The Modelina codeowners and contributors"
  },
  "main": "lib/cjs/index.js",
  "module": "lib/esm/index.js",
  "types": "lib/types/index.d.ts",
  "sideEffects": false,
  "files": [
    "/lib",
    "./README.md",
    "./LICENSE"
  ],
  "dependencies": {
    "@apidevtools/json-schema-ref-parser": "^9.0.9",
    "@apidevtools/swagger-parser": "^10.0.3",
    "@asyncapi/avro-schema-parser": "^3.0.2",
    "@asyncapi/openapi-schema-parser": "^3.0.2",
    "@asyncapi/parser": "^2.0.3",
    "@asyncapi/raml-dt-schema-parser": "^4.0.2",
    "@swc/core": "^1.3.5",
    "@swc/jest": "^0.2.23",
    "alterschema": "^1.1.2",
    "change-case": "^4.1.2",
    "openapi-types": "9.3.0",
    "typescript-json-schema": "^0.53.0"
  },
  "devDependencies": {
    "@asyncapi/parserV1": "npm:@asyncapi/parser@^1.17.2",
    "@netlify/plugin-nextjs": "4.32.2",
    "@types/jest": "^27.0.2",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "ajv": "^8.6.3",
    "concurrently": "^7.5.0",
    "cross-env": "^7.0.3",
    "eslint": "7.32.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-github": "^4.3.2",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-sonarjs": "^0.10.0",
    "jest": "^27.2.5",
    "jsdoc-to-markdown": "^7.1.0",
    "markdown-toc": "^1.2.0",
    "puppeteer": "^16.0.0",
    "ts-jest": "^27.0.5",
    "ts-node": "^10.3.0",
    "typescript": "^4.4.4"
  },
  "scripts": {
    "build": "tsc",
    "build:prod": "npm run build:cjs && npm run build:esm && npm run build:types",
    "build:cjs": "tsc",
    "build:esm": "tsc --project tsconfig.json --module ESNext --outDir ./lib/esm",
    "build:types": "tsc --project tsconfig.json --declaration --emitDeclarationOnly --declarationMap --outDir ./lib/types",
    "docker:build": "docker compose run --build modelina npm install",
    "docker:test": "docker compose run modelina npm run test",
    "docker:test:blackbox": "docker compose run modelina npm run test:blackbox",
    "test": "npm run test:library && npm run test:examples",
    "test:update": "npm run test:library -- -u && npm run test:examples:update",
    "test:library": "cross-env CI=true jest --coverage --testPathIgnorePatterns ./test/blackbox --testPathIgnorePatterns ./test/runtime --testPathIgnorePatterns ./examples",
    "test:examples": "npm run test:examples:regular && npm run test:examples:websites",
    "test:examples:update": "npm run test:examples:regular -- -u && npm run test:examples:websites -- -u",
    "test:examples:regular": "cross-env CI=true jest ./examples --testPathIgnorePatterns ./examples/integrate-with-react",
    "test:examples:websites": "cd ./examples/integrate-with-react && npm i && npm run test",
    "test:blackbox": "concurrently --group -n csharp,go,java,javascript,php,python,rust,typescript,kotlin,cplusplus \"npm run test:blackbox:csharp\" \"npm run test:blackbox:go\" \"npm run test:blackbox:java\" \"npm run test:blackbox:javascript\" \"npm run test:blackbox:php\" \"npm run test:blackbox:python\" \"npm run test:blackbox:rust\" \"npm run test:blackbox:typescript\" \"npm run test:blackbox:kotlin\" \"npm run test:blackbox:cplusplus\"",
    "test:blackbox:csharp": "cross-env CI=true jest ./test/blackbox/blackbox-csharp.spec.ts",
    "test:blackbox:go": "cross-env CI=true jest ./test/blackbox/blackbox-go.spec.ts",
    "test:blackbox:javascript": "cross-env CI=true jest ./test/blackbox/blackbox-javascript.spec.ts",
    "test:blackbox:php": "cross-env CI=true jest ./test/blackbox/blackbox-php.spec.ts",
    "test:blackbox:python": "cross-env CI=true jest ./test/blackbox/blackbox-python.spec.ts",
    "test:blackbox:rust": "cross-env CI=true jest ./test/blackbox/blackbox-rust.spec.ts",
    "test:blackbox:typescript": "cross-env CI=true jest ./test/blackbox/blackbox-typescript.spec.ts",
    "test:blackbox:kotlin": "cross-env CI=true jest ./test/blackbox/blackbox-kotlin.spec.ts",
    "test:blackbox:cplusplus": "cross-env CI=true jest ./test/blackbox/blackbox-cplusplus.spec.ts",
    "test:blackbox:java": "cross-env CI=true jest ./test/blackbox/blackbox-java.spec.ts",
    "test:runtime:java": "cross-env CI=true jest ./test/runtime/runtime-java.spec.ts",
    "generate:runtime:java": "cross-env CI=true ts-node ./test/runtime/runtime-java.ts",
    "test:runtime:kotlin": "cross-env CI=true jest ./test/runtime/runtime-kotlin.spec.ts",
    "generate:runtime:kotlin": "cross-env CI=true ts-node ./test/runtime/runtime-kotlin.ts",
    "test:runtime:rust": "cross-env CI=true jest ./test/runtime/runtime-rust.spec.ts",
    "generate:runtime:rust": "cross-env CI=true ts-node ./test/runtime/runtime-rust.ts",
    "test:runtime:php": "cross-env CI=true jest ./test/runtime/runtime-php.spec.ts",
    "generate:runtime:php": "cross-env CI=true ts-node ./test/runtime/runtime-php.ts",
    "test:runtime:typescript": "cross-env CI=true jest ./test/runtime/runtime-typescript",
    "generate:runtime:typescript": "cross-env CI=true ts-node ./test/runtime/runtime-typescript.ts",
    "test:watch": "jest --watch",
    "docs": "npm run docs:markdown",
    "docs:markdown": "jsdoc2md lib/cjs/index.js -f lib/cjs/**/*.js > API.md",
    "lint": "eslint --max-warnings 0 --config .eslintrc .",
    "lint:fix": "eslint --max-warnings 0 --config .eslintrc . --fix",
    "release": "semantic-release",
    "generate:readme:toc": "markdown-toc -i README.md && markdown-toc -i ./docs/other-tools.md && markdown-toc -i ./docs/languages/Php.md && markdown-toc -i ./docs/languages/Cplusplus.md && markdown-toc -i ./examples/README.md && markdown-toc -i ./docs/languages/Python.md && markdown-toc -i ./docs/usage.md && markdown-toc -i ./docs/integration.md && markdown-toc -i ./docs/advanced.md && markdown-toc -i ./docs/languages/Dart.md && markdown-toc -i ./docs/languages/TypeScript.md && markdown-toc -i ./docs/languages/Java.md && markdown-toc -i ./docs/languages/JavaScript.md && markdown-toc -i ./docs/languages/Csharp.md && markdown-toc -i ./docs/README.md && markdown-toc -i ./docs/generators.md && markdown-toc -i ./docs/presets.md",
    "generate:assets": "npm run build:prod && npm run docs && npm run generate:readme:toc && npm run format",
    "bump:version": "npm --no-git-tag-version --allow-same-version version $VERSION",
    "prepublishOnly": "npm run build:prod && npm run generate:readme:toc && npm run format",
    "format": "prettier --config .prettierrc \"./**/*.ts\" --write"
  },
  "publishConfig": {
    "access": "public"
  }
}
