import { getGeneratedCode } from '../modelina';
import Head from 'next/head';
import { Inter } from '@next/font/google';
import styles from '@/styles/Home.module.css';

const inter = Inter({ subsets: ['latin'] });

function HomePage({models}: any) {
  // Create a good representation of the models here
  const codeModels = models.map((model: any) => {
    return <div key={model.name} style={{padding: "15px"}}>
      <h4>Model: {model.name}</h4>
      <div className={styles.grid} style={{overflow: "auto", padding: "15px"}}>
        <pre>
          <code>
            {model.result}
          </code>
        </pre>
      </div>
    </div>
  });

  return (
    <>
      <Head>
        <title>Modelina Next app</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      <div className={styles.center}>
          <h1>Modelina generated code</h1>
        </div>
        {codeModels}
      </main>
    </>
  );
}

/**
 * Use server side functions to retrieve the generated code from Modelina.
 * 
 * If you need the user to provide inputs to the generation process
 * you can use the context parameter: https://nextjs.org/docs/api-reference/data-fetching/get-server-side-props#context-parameter
 * 
 * Or you can use something like Socket.io.
 */
export async function getServerSideProps() {
  const models = await getGeneratedCode();
  // Only return the relevant information that is needed.
  const propsToReturn = models.map((model) => {
    return { 
      result: model.result, 
      name: model.modelName
    };
  })
  return {
    props: {
      models: propsToReturn
    }
  }
}

export default HomePage;