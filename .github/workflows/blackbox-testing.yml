name: Blackbox testing (Stay Awhile and Listen)
on:
  push:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
jobs:
  test:
    if: github.event.pull_request.draft == false
    name: BlackBox testing ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - if: "github.event.pull_request.draft == false &&!((github.actor == 'asyncapi-bot' && startsWith(github.event.pull_request.title, 'ci: update global workflows')) || (github.actor == 'asyncapi-bot' && startsWith(github.event.pull_request.title, 'chore(release):')) || (github.actor == 'allcontributors' && startsWith(github.event.pull_request.title, 'docs: add')))"
        id: should_run
        name: Should Run
        run: echo "::set-output name=shouldRun::true"
      - if: steps.should_run.outputs.shouldRun == 'true' 
        name: Checkout repository
        uses: actions/checkout@v2
      - if: steps.should_run.outputs.shouldRun == 'true' 
        name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - if: steps.should_run.outputs.shouldRun == 'true' 
        name: Build library
        run: npm install && npm run build
      - if: steps.should_run.outputs.shouldRun == 'true' 
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - if: steps.should_run.outputs.shouldRun == 'true' && matrix.os != 'windows-latest'
        name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - if: steps.should_run.outputs.shouldRun == 'true' && matrix.os == 'windows-latest'
        name: Setup csc.exe
        uses: yoavain/Setup-CSC@v7
      - if: steps.should_run.outputs.shouldRun == 'true' 
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.8'
      - if: steps.should_run.outputs.shouldRun == 'true' 
        name: Test output
        run: npm run test:blackbox